# Задача 1. Вода
#
# Одна бутылка воды «КлирВотер» от производителя «ВодЗавод» в разных магазинах стоит по-разному.
#
# Напишите программу, которая три раза вызывает функцию aboutWater, передаёт в неё один аргумент — цену на воду
# и выводит на экран название воды, производителя и цену.
#
#
#
# Пример:
#
# Название: КлирВотер
# Производитель: ВодЗавод
# Цена: 25
#
#
# Название: КлирВотер
# Производитель: ВодЗавод
# Цена: 30
#
#
# Название: КлирВотер
# Производитель: ВодЗавод
# Цена: 40
#
#
import math


def about_water(price):
    print("Название: КлирВотер\n"
          "Производитель: ВодЗавод\n"
          f"Цена: {price}")


for _ in range(3):
    price_of_water = int(input("Введите цену "))
    about_water(price_of_water)


# Задача 2. Вот это объёмы 2
#
# Андрей продолжает писать курсовую работу по физике, и теперь ему нужно находить не только объём планеты, но и её площадь.
# Для этого он использует две такие формулы:
#
#
#
# Формула для площади сферы:
#
#
#
# Формула для объёма шара:
#
#
#
#
# Так как в самом курсовом проекте эти формулы пригодятся ещё не раз,
# Андрей решил поступить рационально и просто написать функцию для каждой формулы.
#
#
#
# Напишите программу, которая на вход получает от пользователя радиус планеты (вещественное число) и вызывает функции
# sphereArea и sphereVolume. Реализуйте эти функции: первая считает и выводит на экран площадь сферы, вторая — объём шара.
#
#
#

def sphere_area(radius):
    print(4 * math.pi * radius ** 2)


def sphere_volume(radius):
    print(4 / 3 * math.pi * radius ** 3)


radius_of_planet = float(input("Введите радиус планеты: "))
sphere_area(radius_of_planet)
sphere_volume(radius_of_planet)


# Задача 3. Простые числа
#
# Пользователь вводит число N — количество чисел в последовательности. Напишите программу, которая проверяет,
# сколько из этих чисел являются простыми. Для проверки простоты числа реализуйте функцию isPrime.

def is_prime(number):
    for i in range(2, int(number ** 0.5) + 1):
        if number % i == 0:
            print("Не простое")
            break
    else:
        print("Простое")

# ** 0.5 - это по сути взятие корня из числа. Нам нет необходимости проверять числа дальше корня, т.к.
# проверив все множители до корня - мы проверим все возможные варианты делимости числа.

n = int(input("Введите количество чисел в последовательности: "))
for i in range(n):
    new_number = int(input("Введите число: "))
    is_prime(new_number)


# В целом с нашими текущими знаниями этого решения достаточно. Посчитать количество придётся вручную.
# Но решим задачку и вторым вариантом с забеганием вперед:

def is_prime(number):
    for i in range(2, int(number ** 0.5) + 1):
        if number % i == 0:
            return False
    return True


n = int(input("Введите количество чисел в последовательности: "))
count = 0
for i in range(n):
    new_number = int(input("Введите число: "))
    if is_prime(new_number):
        count += 1

print(count)

# Задача 1. Приветствие пользователя
#
# Повторите действия из видео и создайте программу, которая запрашивает у пользователя имя и затем выводит для него приветствие. Для этого:
#
# Создайте переменную и присвойте ей команду input(). Внутри скобок команды напишите приглашение, например: «Введите имя».
# В следующих двух строках напишите вывод приветствия и переменной на экран.
# Запустите программу, введите в консоль имя и нажмите Enter.
# Убедитесь, что программа работает верно.

your_name = input("Введите имя: ")  # пробел для нас выглядит как пустота, а для пайтона это такой же символ как и другие буквы
print("Привет")
print(your_name)

#  Задача 2. Приветствие для двух пользователей
#
# Продолжая предыдущую программу, запросите у пользователя второе имя и выведите второе приветствие на экран. Пример результата программы:
#

your_name = input("Введите имя: ")
your_new_name = input("Введите ещё одно имя: ")

print("Привет")  # располагать операции мы можем по-разному, например первые два принта мы могли бы вызвать после первого инпута,
# перед вторым. Но лучше стараться разделять визуально код по его назначению, тут у нас ввод данных записан отдельно, а использование
# этого ввода - вывод данных, записан отдельно. Разделены они пустой строкой.
print(your_name)
print("Привет")
print(your_new_name)


# Задача 3. Неверная программа
#
#
#
# Ниже приведена программа, которая должна запрашивать фамилию пользователя и выводить её на экран. Но её написали неправильно.
# Скопируйте программу в редактор и исправьте все ошибки. Убедитесь, что программа работает.

sur_name = input('Введите фамилию: ')
# не хватало символа _ в названии -> название не должно содержать пробелов, иначе пайтон подумает что дальше идёт другая переменная
# не хватало t в названии input -> без неё пайтон не мог понять какую функцию мы хотим вызвать
print('Ваша фамилия - ')
print(sur_name)
# тут мы записали название переменной, но записали его внутри строки
# и этим мы запутали пайтон, он подумал что мы просто хотим вывести название переменной, а не то, что мы записали в эту переменную
# чтобы исправить ошибку - мы удалили кавычки и подправили имя переменной, чтобы оно совпадало с той переменной, в которую мы вводили
# фамилию
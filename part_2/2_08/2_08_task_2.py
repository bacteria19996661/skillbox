# Часть 2. Модуль 8. Практическая работа. Задача 2. Поиск элемента — 2
#
# Пользователь вводит искомый ключ. Если он хочет, то может ввести максимальную глубину —
# уровень, до которого будет просматриваться структура.
#
# Напишите функцию, которая находит заданный пользователем ключ в словаре
# и выдаёт значение этого ключа на экран.
# По умолчанию уровень не задан. В качестве примера можно использовать такой словарь:
# site = {
# 'html': {
# 'head': {
# 'title': 'Мой сайт'
# },
# 'body': {
# 'h2': 'Здесь будет мой заголовок',
# 'div': 'Тут, наверное, какой-то блок',
# 'p': 'А вот здесь новый абзац'
# }
# }
# }
# Пример 1
# Введите искомый ключ: head
# Хотите ввести максимальную глубину? Y/N: n
# Значение ключа: {'title': 'Мой сайт'}
# Пример 2
# Введите искомый ключ: head
# Хотите ввести максимальную глубину? Y/N: y
# Введите максимальную глубину: 1
# Значение ключа: None
#
# Что оценивается
# Результат вычислений корректен.
# Формат вывода соответствует примеру.
# Input содержит корректные приглашения для ввода.
# Основной функционал описан в отдельной функции(-ях).
# Переменные и функции имеют значимые имена, не только a, b, c, d.

def key_search(struct, key, max_deep, deep=1):
    while deep <= max_deep:
        if key in struct:
            return struct[key]

        for sub_struct in struct.values():
            if isinstance(sub_struct, dict):
                result = key_search(sub_struct, key, max_deep, deep=deep+1)
                if result:
                    break
        else:
            result = None

        return result

site = {
    'html': {
        'head': {
            'title': 'Мой сайт'
        },
        'body': {
            'h2': 'Здесь будет мой заголовок',
            'div': 'Тут, наверное, какой-то блок',
            'p': 'А вот здесь новый абзац'
        }
    }
}

usr_key = input('Введите искомый ключ: ')
max_deep = 4
usr_question = input('Хотите ввести максимальную глубину? Y/N: ').lower()
if usr_question == 'y':
    usr_max_deep = int(input('Введите максимальную глубину: '))
    max_deep = usr_max_deep

result_value = key_search(site, usr_key, max_deep)
print(f"Значение ключа: {result_value}")

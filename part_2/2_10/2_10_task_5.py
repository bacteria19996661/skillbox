#!/usr/bin/python
# -*- coding: utf-8 -*-
# Часть 2. Модуль 10. Практическая работа. Задача 5. Надёжные вычисления
#
# Вы работаете в компании, занимающейся финансовыми вычислениями.
# Вам необходимо разработать функцию для вычисления квадратного корня числа,
# которая будет использоваться в анализе финансовых данных и расчёте инвестиционных показателей.
# Вы понимаете, что передача отрицательного числа или возникновение других ошибок вычисления
# могут привести к непредсказуемым результатам.
#
# Задача
# Напишите функцию, которая будет:
# Вычислять и возвращать квадратный корень полученного числа.
# Обрабатывать исключения для отрицательных чисел и других возможных ошибок.
#
# Советы
# При помощи оператора as вы можете сохранить пойманную ошибку в переменную,
# чтобы затем использовать её для получения дополнительной информации:
#
# except Exception as exc:
#     print(exc)
# Старайтесь не смешивать конкретные исключения, которые вы ожидаете,
# со всеми другими (except Exception будет ловить все исключения,
# которые не были пойманы предыдущими except).

import math

def sqrt_number(num):
    return math.sqrt(num)


if __name__ == '__main__':
    test_cases = [
        25,
        1.0,
        'xvxv',
        0.25,
        0,
        -1,
        ''
    ]

    for i, number in enumerate(test_cases):
        try:
            result = sqrt_number(number)
            print(f"{i+1}) Квадратный корень из {number}: {result}\n")
        except TypeError as err:
            print(f"{i+1}) Неверный формат входящих данных: {err} {type(err)}\n")
        except ValueError as err:
            print(f"{i+1}) Нельзя использовать отрицательные числа в качестве входящих данных: {err} {type(err)}\n")
        except Exception as err:
            print(err, type(err))

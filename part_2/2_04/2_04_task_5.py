# Часть 2. Модуль 4. Практическая работа. Задание 5. Разворот
#
# На вход в программу подаётся строка, в которой буква h встречается как минимум два раза.
# Реализуйте код, который разворачивает последовательность символов, заключённую между
# первым и последним появлением буквы h, в противоположном порядке.
#
# Пример 1:
# Введите строку: hqwehrty
# Развёрнутая последовательность между первым и последним h: ewq.
#
# Пример 2:
# Введите строку: hh
# Развёрнутая последовательность между первым и последним h:
#
# Пример 3:
# Введите строку: hhqwerh
# Развёрнутая последовательность между первым и последним h: rewqh.
#
# Советы и рекомендации
# Индекс нужного элемента можно искать как вручную, так и при помощи готовых методов списка.
# У метода index есть «брат» — метод rindex. В отличие от первого второй метод начинает поиск с правой стороны (с конца).
#
# Что оценивается
# Результат вычислений корректен.
# Input содержит корректные приглашения для ввода.
# Формат вывода соответствует примеру.
# Переменные и функции имеют значимые имена, не только a, b, c, d.
#
# Пример использования функции extend():
# a = ['car', 'top', 'lot']
# b = ['dog', 'cat']
# a.extend(b)
# print(a)
#
# Пример использования функции shuffle()
# import random
# lst = list(range(1, 50, 6))
# random.shuffle(lst)
# print(lst)
#
# Примеры получения индекса последнего совпадения символа/подстроки:
# x = 'раз два три раз два три раз'
# x.rindex('раз')
# >>> 24
# x.rindex('раз', 0, 23)
# >>> 12

import random

population = list('abcdefghijklmnoprstuvwxyz')
rand_population = random.sample(population, random.randint(0, 20))
rand_population.extend('hh')
random.shuffle(rand_population)
rand_population_str = "".join(rand_population)
print(rand_population_str)
a = rand_population_str.index('h')
b = rand_population_str.rindex('h')
print("".join(list(reversed(rand_population_str[a+1:b]))))
